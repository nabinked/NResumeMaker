@using System.Threading.Tasks
@using ResumeMaker.Controllers
@using ResumeMaker.Enums
@model IEnumerable<ResumeMaker.Data.Models.Core.Education>

<div id="EducationViewComponentWrapper" class="col-sm-12">
    <h3>
        Education <small>
            @Component.Invoke("CudAction", typeof(EducationController), nameof(EducationController.GetFormForSaveAndUpdate),
                                "EducationViewComponentWrapper", new { id = 0 }, CudTypeEnum.Create, "")
        </small>
    </h3>

    @if (!Model.Any())
    {
        @Component.Invoke("CudAction", typeof(EducationController), nameof(EducationController.GetFormForSaveAndUpdate),
                            "EducationViewComponentWrapper", new { id = 0 }, CudTypeEnum.Create, "Add Education")
    }
    else
    {
        foreach (var education in Model)
        {
            <div class="record-row">
                <div class="col-sm-10 ">
                    <h4>
                        @education.EducationDegree
                        <small>
                            @Component.Invoke("CudAction", typeof(EducationController), nameof(EducationController.GetFormForSaveAndUpdate),
                                                "EducationViewComponentWrapper", new { id = education.Id }, CudTypeEnum.Update, "")


                        </small>
                    </h4>
                </div>
                <div class="col-sm-2  text-right">
                    @education.YearOfCompletion
                </div>
                <div class="col-sm-10 ">
                    <strong>
                        @education.School
                    </strong>
                    <br />
                    <em>@education.Description</em>
                </div>
                <div class="col-sm-2 text-right">
                    @Component.Invoke("CudAction", typeof(EducationController), nameof(EducationController.Delete), education.Id)
                </div>
            </div>
        }
    }

</div>